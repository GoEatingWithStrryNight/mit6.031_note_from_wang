在Java中，abstract class（抽象类）是一种不能被实例化的类，意味着你不能直接创建一个抽象类的对象。抽象类的主要目的是提供一个可以被多个子类共享的通用模板。它通常包含抽象方法和非抽象方法。

抽象方法是没有具体实现的方法，只有声明而没有方法体。抽象类可以包含抽象方法，也可以包含具体实现的方法。如果一个类包含至少一个抽象方法，那么这个类也必须被声明为抽象类。

抽象类的特点：
不能被实例化：不能直接创建抽象类的对象。
可以包含抽象方法：抽象方法可以没有具体实现，留给子类去实现。
可以包含具体实现的方法：除了抽象方法，抽象类也可以包含有实现的方法。
子类必须实现所有抽象方法：如果一个类继承了一个抽象类，那么这个类必须实现抽象类中的所有抽象方法，除非它自己也被声明为抽象类。
抽象类的使用场景：
当你想要创建一个表示一些基本功能的类，但又不想立即提供所有的实现时。
当你想要确保所有继承的子类都有一些共同的方法时，可以将这些方法定义为抽象方法。
当你想要在几个类之间共享代码时，可以将共享的代码放在一个抽象类中，然后让这几个类继承这个抽象类。